# Production docker-compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        - BUILD_ENV=production
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2 --worker-class gthread
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DEBUG=False
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: pfd_nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    # Additional production settings
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8 --data-checksums"
    # Remove port exposure in production
    ports: []
    # Production-specific volume mount
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups

  redis:
    # Production Redis configuration
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    # Remove port exposure in production
    ports: []

  celery:
    restart: always
    command: celery -A config worker -l warning --concurrency=4
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - C_FORCE_ROOT=false

  celery-beat:
    restart: always
    command: celery -A config beat -l warning --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # Monitoring with Prometheus node exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: pfd_node_exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    profiles:
      - monitoring

# Production networks configuration
networks:
  default:
    name: pfd_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
