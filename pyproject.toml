[project]
name = "personal-finance-dashboard"
version = "1.0.0"
description = "Personal Finance Dashboard with PII Protection"
authors = [
    {name = "Alex Devillier", email = "alex.devillier@gmail.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"

dependencies = [
    "django>=5.2.1,<5.3",
    "djangorestframework>=3.14.0",
    "django-allauth>=0.57.0",
    "psycopg[binary]>=3.1.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "django-celery-beat>=2.5.0",
    "django-cors-headers>=4.3.0",
    "django-filter>=23.3",
    "django-ratelimit>=4.1.0",
    "cryptography>=41.0.0",
    "pillow>=10.0.0",
    "django-storages[s3]>=1.14.0",
    "boto3>=1.34.0",
    "django-crispy-forms>=2.1",
    "crispy-tailwind>=0.5.0",
    "gunicorn>=21.2.0",
    "python-magic>=0.4.27",
    "pytesseract>=0.3.10",
    "python-dotenv>=1.0.0",
    "django-htmx>=1.17.0",
    "django-extensions>=3.2.0",
    "pyotp>=2.9.0",
    "qrcode[pil]>=7.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.12.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
    "factory-boy>=3.3.0",
    "coverage>=7.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
    "freezegun>=1.2.2",
    "locust>=2.17.0",
    "playwright>=1.40.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.12.0",
    "freezegun>=1.2.2",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["apps", "config", "utils"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "django-stubs>=4.2.0",
    "factory-boy>=3.3.0",
    "coverage>=7.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = ["apps", "config", "utils"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
strict_optional = true
strict_equality = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.settings.development"
strict_settings = false

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.testing"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = [
    "--reuse-db",
    "--nomigrations",
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=90",
]
testpaths = ["tests"]

[tool.coverage.run]
source = ["."]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "venv/*",
    "manage.py",
    "*/wsgi.py",
    "*/asgi.py",
    "*/settings/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101"]  # Skip assert_used test

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "migrations",
    "venv",
]
