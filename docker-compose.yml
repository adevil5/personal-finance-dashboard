services:
  # PostgreSQL Database
  db:
    image: postgres:17-alpine
    container_name: pfd_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-personal_finance}
      POSTGRES_USER: ${DB_USER:-pfd_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Init script commented out - extensions will be created by Django migrations
      # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-pfd_user} -d ${DB_NAME:-personal_finance}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pfd_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: runtime
    container_name: pfd_web
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgresql://${DB_USER:-pfd_user}:${DB_PASSWORD:-secure_password}@db:5432/${DB_NAME:-personal_finance}
      - DB_NAME=${DB_NAME:-personal_finance}
      - DB_USER=${DB_USER:-pfd_user}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-development-secret-key-change-in-production}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - PII_ENCRYPTION_KEY=${PII_ENCRYPTION_KEY}
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Worker
  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: runtime
    container_name: pfd_celery
    restart: unless-stopped
    command: celery -A config worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgresql://${DB_USER:-pfd_user}:${DB_PASSWORD:-secure_password}@db:5432/${DB_NAME:-personal_finance}
      - DB_NAME=${DB_NAME:-personal_finance}
      - DB_USER=${DB_USER:-pfd_user}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-development-secret-key-change-in-production}
      - PII_ENCRYPTION_KEY=${PII_ENCRYPTION_KEY}
    volumes:
      - .:/app
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: runtime
    container_name: pfd_celery_beat
    restart: unless-stopped
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgresql://${DB_USER:-pfd_user}:${DB_PASSWORD:-secure_password}@db:5432/${DB_NAME:-personal_finance}
      - DB_NAME=${DB_NAME:-personal_finance}
      - DB_USER=${DB_USER:-pfd_user}
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-development-secret-key-change-in-production}
      - PII_ENCRYPTION_KEY=${PII_ENCRYPTION_KEY}
    volumes:
      - .:/app
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Frontend Development Server (optional, for frontend-only development)
  frontend:
    image: node:20-alpine
    container_name: pfd_frontend
    working_dir: /app
    command: npm run dev
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    ports:
      - "${VITE_PORT:-5173}:5173"
    profiles:
      - frontend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local
  node_modules:
    driver: local

networks:
  default:
    name: pfd_network
